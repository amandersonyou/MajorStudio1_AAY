/*
 * Note that this function uses *synchronous* JavaScript
 * There is a 2-second (2000 milliseconds) timer after which the JSON will be downloaded
 * so if the API calls are not finished by then, the JSON will only have the ones that did finish.
 * You can increase the timer if you need to.
 */

// load a default library that lets us read/write to the file system
var fs = require('fs');
// load a default library that lets us make HTTP requests (like calls to an API)
var request = require('request');

// endpoint URL
const url = 'https://collectionapi.metmuseum.org/public/collection/v1/objects';

// object Ids I want to download
const myObjectIds = [
  6240,
7596,
10114,
10151,
10152,
10154,
10178,
10180,
10181,
10183,
10195,
10196,
10207,
10215,
10235,
10258,
10365,
10377,
10435,
10456,
10480,
10481,
10491,
10497,
10499,
10501,
10506,
10509,
10560,
10570,
10578,
10584,
10586,
10587,
10589,
10607,
10609,
10643,
10660,
10674,
10691,
10708,
10730,
10743,
10768,
10769,
10771,
10777,
10786,
10788,
10793,
10798,
10799,
10894,
10934,
10946,
10974,
10980,
11004,
11007,
11008,
11011,
11016,
11017,
11018,
11023,
11032,
11042,
11050,
11053,
11083,
11087,
11090,
11093,
11099,
11100,
11107,
11121,
11148,
11150,
11181,
11197,
11225,
11226,
11227,
11228,
11229,
11231,
11232,
11233,
11234,
11253,
11255,
11256,
11278,
11292,
11309,
11310,
11311,
11313,
11316,
11317,
11318,
11320,
11327,
11329,
11377,
11381,
11382,
11390,
11404
// 11405,
// 11425,
// 11426,
// 11517,
// 11518,
// 11521,
// 11532,
// 11534,
// 11543,
// 11557,
// 11558,
// 11577,
// 11578,
// 11580,
// 11581,
// 11582,
// 11598,
// 11600,
// 11607,
// 11623,
// 11630,
// 11631,
// 11657,
// 11659,
// 11682,
// 11750,
// 11771,
// 11774,
// 11850,
// 11851,
// 11891,
// 11892,
// 11893,
// 11894,
// 11900,
// 11902,
// 11910,
// 11925,
// 11970,
// 11976,
// 11978,
// 12028,
// 12053,
// 12061,
// 12062,
// 12096,
// 12097,
// 12106,
// 12115,
// 12122,
// 12123,
// 12135,
// 12143,
// 12150,
// 12162,
// 12163,
// 12165,
// 12169,
// 12179,
// 12185,
// 12211,
// 12247,
// 12258,
// 12259,
// 12302,
// 12307,
// 12345,
// 12349,
// 12359,
// 12362,
// 12363,
// 12374,
// 12385,
// 12396,
// 12399,
// 12408,
// 12410,
// 12415,
// 12436,
// 12493,
// 12494,
// 12504,
// 12541,
// 12586,
// 12605,
// 12610,
// 12629,
// 12630,
// 12711,
// 12713,
// 12716,
// 12719,
// 12724,
// 12735,
// 12736,
// 12737,
// 12748,
// 12751,
// 12754,
// 12755,
// 12758,
// 12760,
// 12763,
// 12764,
// 12773,
// 12800,
// 12802,
// 12831,
// 12833,
// 12834,
// 12838,
// 12840,
// 12842,
// 12849,
// 12862,
// 12863,
// 12902,
// 12925,
// 12926,
// 12953,
// 13017,
// 13018,
// 13019,
// 13033,
// 13085,
// 13111,
// 13112,
// 13114,
// 13115,
// 13116,
// 13117,
// 13173,
// 13186,
// 13312,
// 13315,
// 13352,
// 13353,
// 13354,
// 13355,
// 13356,
// 13357,
// 13358,
// 13360,
// 13381,
// 13453,
// 13530,
// 14202,
// 14394,
// 14426,
// 14473,
// 14475,
// 14481,
// 14836,
// 14844,
// 14846,
// 14849,
// 14850,
// 14871,
// 14930,
// 15276,
// 15413,
// 15437,
// 15444,
// 15510,
// 15538,
// 15958,
// 16043,
// 16048,
// 16050,
// 16056,
// 16058,
// 16059,
// 16072,
// 16074,
// 16076,
// 16079,
// 16146,
// 16574,
// 16575,
// 16577,
// 16869,
// 16875,
// 17574,
// 17897,
// 19013,
// 19246,
// 19286,
// 19289,
// 19291,
// 19293,
// 19300,
// 19330,
// 19334,
// 19343,
// 19346,
// 19352,
// 19371,
// 19435,
// 19745,
// 20421,
// 20639,
// 21693
];


// set up empty Array for us to save results to
const myArray = [];

function fetchUrl(objectId){
    request(url + '/' + objectId, function (error, response, body) {
      console.error('error:', error); // Print the error if one occurred
      console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received

      let obj = JSON.parse(body);

      console.log(obj.primaryImage);
      let index = myArray.length;
      myArray[index] = {};
      myArray[index]["objectID"] = obj.objectID;
      myArray[index]["title"] = obj.title;
      myArray[index]["date"] = obj.objectBeginDate;
      myArray[index]["primaryImage"] = obj.primaryImage;
      myArray[index]["filename"] = obj.primaryImage.split('/').pop();
    });
}

// call the function for each element in the myObjectIds array
myObjectIds.forEach(objectId => {
    fetchUrl(objectId);
});

// the function inside the setTimeout saves myResults to a JSON
// it will automatically run after 2000 ms
setTimeout(() => {
    fs.writeFileSync('./AMERdata1.json', JSON.stringify(myArray), 'utf8');
}, 2000);
